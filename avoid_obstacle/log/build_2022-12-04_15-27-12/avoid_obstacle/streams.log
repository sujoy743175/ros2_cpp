[0.259s] Invoking command in '/home/automation/projec_ws/cppros2_projects/avoid_obstacle/build/avoid_obstacle': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/automation/projec_ws/ros2Projects/install/ros2_teleop_keyboard:/home/automation/projec_ws/ros2Projects/install/obstacle_avoidance:/home/automation/projec_ws/ros2Projects/install/blink_publisher:/home/automation/projec_ws/ros2Projects/install/WirelessRangeEstimator:/opt/ros/humble /usr/bin/cmake --build /home/automation/projec_ws/cppros2_projects/avoid_obstacle/build/avoid_obstacle -- -j2 -l2
[0.977s] [35m[1mConsolidate compiler generated dependencies of target find_way[0m
[1.150s] [ 50%] [32mBuilding CXX object CMakeFiles/find_way.dir/src/find_way.cpp.o[0m
[19.762s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:[m[K In constructor â€˜[01m[KObstacle_Avoidance::Obstacle_Avoidance()[m[Kâ€™:
[19.783s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:47:78:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KFloate32[m[Kâ€™ is not a member of â€˜[01m[Kstd_msgs::msg[m[Kâ€™; did you mean â€˜[01m[KFloat32[m[Kâ€™?
[19.786s]    47 |       left_distance_subscription_ = this->create_subscription<std_msgs::msg::[01;31m[KFloate32[m[K>(
[19.786s]       |                                                                              [01;31m[K^~~~~~~~[m[K
[19.787s]       |                                                                              [32m[KFloat32[m[K
[19.787s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:47:87:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[KObstacle_Avoidance::create_subscription<<expression error> >(const char [14], int, std::_Bind_helper<false, void (Obstacle_Avoidance::*)(const std_msgs::msg::Float32_<std::allocator<void> >&) const, Obstacle_Avoidance*, const std::_Placeholder<1>&>::type)[m[Kâ€™
[19.788s]    47 |       left_distance_subscription_ = [01;31m[Kthis->create_subscription<std_msgs::msg::Floate32>([m[K
[19.788s]       |                                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[19.789s]    48 | [01;31m[K      "left_distance", 10, std::bind(&Obstacle_Avoidance::left_distance_callback, this, _1))[m[K;
[19.790s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[19.791s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node.hpp:1321[m[K,
[19.791s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[19.792s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:22[m[K,
[19.792s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[19.793s]                  from [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:6[m[K:
[19.793s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class MessageT, class CallbackT, class AllocatorT, class SubscriptionT, class MessageMemoryStrategyT> std::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr)[m[Kâ€™
[19.793s]    92 | [01;36m[KNode[m[K::create_subscription(
[19.794s]       | [01;36m[K^~~~[m[K
[19.794s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:92:1:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[19.795s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:47:87:[m[K [01;31m[Kerror: [m[Ktemplate argument 1 is invalid
[19.796s]    47 |       left_distance_subscription_ = [01;31m[Kthis->create_subscription<std_msgs::msg::Floate32>([m[K
[19.796s]       |                                     [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^[m[K
[19.796s]    48 | [01;31m[K      "left_distance", 10, std::bind(&Obstacle_Avoidance::left_distance_callback, this, _1))[m[K;
[19.796s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[19.797s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24[m[K,
[19.797s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40[m[K,
[19.797s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:23[m[K,
[19.797s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[19.798s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[19.798s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[19.798s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[19.798s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[19.799s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[19.800s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[19.800s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[19.800s]                  from [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:6[m[K:
[19.801s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:[m[K In member function â€˜[01m[Kvoid Obstacle_Avoidance::fwd_distance_callback(const Float32&) const[m[Kâ€™:
[19.801s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:88:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 5 has type â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
[19.802s]    88 |       RCLCPP_INFO(this->get_logger(), [01;35m[K"I heard: '%d'"[m[K, [32m[Kmsg.data[m[K);
[19.802s]       |                                       [01;35m[K^~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~[m[K
[19.802s]       |                                                            [32m[K|[m[K
[19.802s]       |                                                            [32m[Kdouble[m[K
[19.803s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:88:51:[m[K [01;36m[Knote: [m[Kformat string is defined here
[19.803s]    88 |       RCLCPP_INFO(this->get_logger(), "I heard: '[01;36m[K%d[m[K'", msg.data);
[19.803s]       |                                                  [01;36m[K~^[m[K
[19.803s]       |                                                   [01;36m[K|[m[K
[19.804s]       |                                                   [01;36m[Kint[m[K
[19.804s]       |                                                  [32m[K%f[m[K
[19.804s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24[m[K,
[19.804s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40[m[K,
[19.805s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:23[m[K,
[19.805s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[19.805s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[19.806s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[19.806s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[19.806s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[19.807s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[19.807s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[19.807s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[19.807s]                  from [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:6[m[K:
[19.808s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:[m[K In member function â€˜[01m[Kvoid Obstacle_Avoidance::left_distance_callback(const Float32&) const[m[Kâ€™:
[19.808s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:93:39:[m[K [01;35m[Kwarning: [m[Kformat â€˜[01m[K%d[m[Kâ€™ expects argument of type â€˜[01m[Kint[m[Kâ€™, but argument 5 has type â€˜[01m[Kdouble[m[Kâ€™ [[01;35m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-Wformat=-Wformat=]8;;[m[K]
[19.808s]    93 |       RCLCPP_INFO(this->get_logger(), [01;35m[K"I heard: '%d'"[m[K, [32m[Kmsg.data[m[K);
[19.808s]       |                                       [01;35m[K^~~~~~~~~~~~~~~[m[K  [32m[K~~~~~~~~[m[K
[19.809s]       |                                                            [32m[K|[m[K
[19.809s]       |                                                            [32m[Kdouble[m[K
[19.809s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:93:51:[m[K [01;36m[Knote: [m[Kformat string is defined here
[19.809s]    93 |       RCLCPP_INFO(this->get_logger(), "I heard: '[01;36m[K%d[m[K'", msg.data);
[19.810s]       |                                                  [01;36m[K~^[m[K
[19.810s]       |                                                   [01;36m[K|[m[K
[19.810s]       |                                                   [01;36m[Kint[m[K
[19.811s]       |                                                  [32m[K%f[m[K
[21.818s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[21.818s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:26[m[K,
[21.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[21.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[21.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[21.819s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[21.820s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[21.821s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[21.821s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[21.822s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[21.822s]                  from [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:6[m[K:
[21.823s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[21.835s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.836s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.843s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.844s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.845s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:50:87:[m[K   required from here
[21.846s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Float32_<std::allocator<void> >, std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>[m[Kâ€™})
[21.847s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[21.848s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[21.849s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[21.860s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:23[m[K,
[21.861s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[21.862s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[21.862s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[21.863s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[21.863s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[21.864s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[21.864s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[21.869s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[21.872s]                  from [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:6[m[K:
[21.884s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[21.884s]  1477 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[21.884s]       |         [01;36m[K^~~~~~~~[m[K
[21.885s] [01m[K/usr/include/c++/11/variant:1477:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[21.899s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[21.908s] [01m[K/usr/include/c++/11/variant:1473:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>][m[Kâ€™
[21.908s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[21.909s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.909s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.909s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.910s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.910s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:50:87:[m[K   required from here
[21.910s] [01m[K/usr/include/c++/11/variant:1391:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[21.911s]  1391 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[21.911s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[21.912s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; MessageT = std_msgs::msg::Float32_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[21.912s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.913s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = std_msgs::msg::Float32_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.913s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.914s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = std_msgs::msg::Float32_<std::allocator<void> >; CallbackT = std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<std_msgs::msg::Float32_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<std_msgs::msg::Float32_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[21.914s] [01m[K/home/automation/projec_ws/cppros2_projects/avoid_obstacle/src/find_way.cpp:50:87:[m[K   required from here
[21.939s] [01m[K/usr/include/c++/11/variant:1414:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[21.940s]  1414 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[21.955s]       |                [01;36m[K^~~~~~~~[m[K
[21.956s] [01m[K/usr/include/c++/11/variant:1414:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Float32_<std::allocator<void> >, std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[21.956s]  1414 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[21.956s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[21.956s] [01m[K/usr/include/c++/11/variant:1415:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[21.957s]  1415 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[21.957s]       |                [01;36m[K^~~~~~~~[m[K
[21.957s] [01m[K/usr/include/c++/11/variant:1415:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<std_msgs::msg::Float32_<std::allocator<void> >, std::_Bind<void (Obstacle_Avoidance::*(Obstacle_Avoidance*, std::_Placeholder<1>))(const std_msgs::msg::Int32_<std::allocator<void> >&) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(const std_msgs::msg::Int32_<std::allocator<void> >&)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&)>, std::function<void(const std_msgs::msg::Float32_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<std_msgs::msg::Float32_<std::allocator<void> >, std::default_delete<std_msgs::msg::Float32_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const std_msgs::msg::Float32_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<std_msgs::msg::Float32_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[21.957s]  1415 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[21.958s]       |                          [01;36m[K^~~~~~~~~[m[K
[54.323s] gmake[2]: *** [CMakeFiles/find_way.dir/build.make:76: CMakeFiles/find_way.dir/src/find_way.cpp.o] Error 1
[54.342s] gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/find_way.dir/all] Error 2
[54.342s] gmake: *** [Makefile:146: all] Error 2
[54.763s] Invoked command in '/home/automation/projec_ws/cppros2_projects/avoid_obstacle/build/avoid_obstacle' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/automation/projec_ws/ros2Projects/install/ros2_teleop_keyboard:/home/automation/projec_ws/ros2Projects/install/obstacle_avoidance:/home/automation/projec_ws/ros2Projects/install/blink_publisher:/home/automation/projec_ws/ros2Projects/install/WirelessRangeEstimator:/opt/ros/humble /usr/bin/cmake --build /home/automation/projec_ws/cppros2_projects/avoid_obstacle/build/avoid_obstacle -- -j2 -l2
